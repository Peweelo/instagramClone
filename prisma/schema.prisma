datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")

}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String @id @default(cuid()) @map("_id")
  email           String @unique
  login           String @unique
  username        String @unique
  name            String?
  lastname        String?
  image           String
  hashedPassword  String
  following       Int
  followers       Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt


  comment Comment[]
  accounts Account[]
  Posts Post[]
  ListOfFollowers ListOfFollowers[]
  ListOfFollowing ListOfFollowing[]
}


model ListOfFollowers {
  FollowersId String @id @map("_id")
  userId String 
  user    User    @relation(fields: [userId], references: [id])
}
model ListOfFollowing {
  FollowingId String @id @map("_id")
  userId String
  user    User    @relation(fields: [userId], references: [id])
}


model Post {
  id              String @default(cuid()) @map("_id") @id
  title           String
  userId          String 
  likes           Int
  user    User    @relation(fields: [userId], references: [id])

  comments Comment[]
  @@index([userId])
}
model Comment {
  id        String    @id @default(cuid()) @map("_id")
  text      String
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String

  commentId String?

  @@index([authorId])
  @@index([postId])
}
model Account {
  id                String @id @default(cuid()) @map("_id")
  userId            String 
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? 
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}